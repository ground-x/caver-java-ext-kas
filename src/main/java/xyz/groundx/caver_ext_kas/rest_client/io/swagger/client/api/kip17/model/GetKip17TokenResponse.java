/*
 * KIP-17 API
 * # Introduction The KIP-17 API helps BApp (Blockchain Application) developers to manage contracts and tokens created in accordance with the [KIP-17](https://docs.klaytnapi.com/v/en/api#kip-17-api) standard, which is Klaytn's technical speficication for Non-Fungible Tokens.  The functionality of the multiple endpoints enables you to do the following actions: - deploy smart contracts - manage the entire life cycle of an NFT from minting, to sending and burning - get contract or token data - authorize a third party to execute token transfers - view token ownership history  For more details on KAS, please refer to [KAS Docs](https://docs.klaytnapi.com/). If you have any questions or comments, please leave them in the [Klaytn Developers Forum](http://forum.klaytn.com).    **alias**  When a method of the KIP-17 API requires a contract address, you can use the contract **alias**. You can give the contract an alias when deploying, and use it in place of the complicated address.  # Fee Payer Options KAS KIP-17 supports four ways to pay the transaction fees.<br />  **1. Only using KAS Global FeePayer Account** <br /> Sends all transactions using KAS Global FeePayer Account. ``` {     \"options\": {       \"enableGlobalFeePayer\": true     } } ``` <br />  **2. Using User FeePayer Account** <br /> Sends all transactions using User FeePayer Account. ``` {   \"options\": {     \"enableGlobalFeePayer\": false,     \"userFeePayer\": {       \"krn\": \"krn:1001:wallet:20bab367-141b-439a-8b4c-ae8788b86316:feepayer-pool:default\",       \"address\": \"0xd6905b98E4Ba43a24E842d2b66c1410173791cab\"     }   } } ``` <br />  **3. Using both KAS Global FeePayer Account + User FeePayer Account** <br /> Sends transactions using User FeePayer Account by default, and switches to the KAS Global FeePayer Account when balances are insufficient. ``` {   \"options\": {     \"enableGlobalFeePayer\": true,     \"userFeePayer\": {       \"krn\": \"krn:1001:wallet:20bab367-141b-439a-8b4c-ae8788b86316:feepayer-pool:default\",       \"address\": \"0xd6905b98E4Ba43a24E842d2b66c1410173791cab\"     }   } } ``` <br />  **4. Not using FeePayer Account** <br /> Sends transactions the default way, paying the transaction fee from the user's account. ``` {   \"options\": {     \"enableGlobalFeePayer\": false   } } ``` <br />  # Error Code This section contains the errors that might occur when using the KIP-17 API. KAS uses HTTP status codes. More details can be found in this [link](https://developer.mozilla.org/en/docs/Web/HTTP/Status).
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xyz.groundx.caver_ext_kas.rest_client.io.swagger.client.api.kip17.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * GetKip17TokenResponse
 */


public class GetKip17TokenResponse {
  @SerializedName("createdAt")
  private Long createdAt = null;

  @SerializedName("owner")
  private String owner = null;

  @SerializedName("previousOwner")
  private String previousOwner = null;

  @SerializedName("tokenId")
  private String tokenId = null;

  @SerializedName("tokenUri")
  private String tokenUri = null;

  @SerializedName("transactionHash")
  private String transactionHash = null;

  @SerializedName("updatedAt")
  private Long updatedAt = null;

  public GetKip17TokenResponse createdAt(Long createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * The UNIX timestamp of when the token was minted.
   * @return createdAt
  **/
  @Schema(example = "1608640582", required = true, description = "The UNIX timestamp of when the token was minted.")
  public Long getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(Long createdAt) {
    this.createdAt = createdAt;
  }

  public GetKip17TokenResponse owner(String owner) {
    this.owner = owner;
    return this;
  }

   /**
   * The Klaytn accound address of the current owner.
   * @return owner
  **/
  @Schema(example = "1256858690287786827422183071797137826454416580167", required = true, description = "The Klaytn accound address of the current owner.")
  public String getOwner() {
    return owner;
  }

  public void setOwner(String owner) {
    this.owner = owner;
  }

  public GetKip17TokenResponse previousOwner(String previousOwner) {
    this.previousOwner = previousOwner;
    return this;
  }

   /**
   * The Klaytn account address of the previous owner.
   * @return previousOwner
  **/
  @Schema(example = "0", required = true, description = "The Klaytn account address of the previous owner.")
  public String getPreviousOwner() {
    return previousOwner;
  }

  public void setPreviousOwner(String previousOwner) {
    this.previousOwner = previousOwner;
  }

  public GetKip17TokenResponse tokenId(String tokenId) {
    this.tokenId = tokenId;
    return this;
  }

   /**
   * The ID assigned to the token.
   * @return tokenId
  **/
  @Schema(example = "9", required = true, description = "The ID assigned to the token.")
  public String getTokenId() {
    return tokenId;
  }

  public void setTokenId(String tokenId) {
    this.tokenId = tokenId;
  }

  public GetKip17TokenResponse tokenUri(String tokenUri) {
    this.tokenUri = tokenUri;
    return this;
  }

   /**
   * The URI that contains the tokens&#x27;s metadata.
   * @return tokenUri
  **/
  @Schema(example = "https://metastore.kip17.com/0xbe02aba/0x1", required = true, description = "The URI that contains the tokens's metadata.")
  public String getTokenUri() {
    return tokenUri;
  }

  public void setTokenUri(String tokenUri) {
    this.tokenUri = tokenUri;
  }

  public GetKip17TokenResponse transactionHash(String transactionHash) {
    this.transactionHash = transactionHash;
    return this;
  }

   /**
   * The hash of the latest transaction that caused a token ownership change.
   * @return transactionHash
  **/
  @Schema(example = "82315568714487276692586679659907928258870618801923522620980293659819472250623", required = true, description = "The hash of the latest transaction that caused a token ownership change.")
  public String getTransactionHash() {
    return transactionHash;
  }

  public void setTransactionHash(String transactionHash) {
    this.transactionHash = transactionHash;
  }

  public GetKip17TokenResponse updatedAt(Long updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * The UNIX timestamp of the last token ownership change.
   * @return updatedAt
  **/
  @Schema(example = "1608640582", required = true, description = "The UNIX timestamp of the last token ownership change.")
  public Long getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(Long updatedAt) {
    this.updatedAt = updatedAt;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetKip17TokenResponse getKip17TokenResponse = (GetKip17TokenResponse) o;
    return Objects.equals(this.createdAt, getKip17TokenResponse.createdAt) &&
        Objects.equals(this.owner, getKip17TokenResponse.owner) &&
        Objects.equals(this.previousOwner, getKip17TokenResponse.previousOwner) &&
        Objects.equals(this.tokenId, getKip17TokenResponse.tokenId) &&
        Objects.equals(this.tokenUri, getKip17TokenResponse.tokenUri) &&
        Objects.equals(this.transactionHash, getKip17TokenResponse.transactionHash) &&
        Objects.equals(this.updatedAt, getKip17TokenResponse.updatedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createdAt, owner, previousOwner, tokenId, tokenUri, transactionHash, updatedAt);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetKip17TokenResponse {\n");
    
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    previousOwner: ").append(toIndentedString(previousOwner)).append("\n");
    sb.append("    tokenId: ").append(toIndentedString(tokenId)).append("\n");
    sb.append("    tokenUri: ").append(toIndentedString(tokenUri)).append("\n");
    sb.append("    transactionHash: ").append(toIndentedString(transactionHash)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
